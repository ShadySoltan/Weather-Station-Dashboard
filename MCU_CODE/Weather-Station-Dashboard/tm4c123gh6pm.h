#ifndef TM4C123GH6PM_RISTERS
#define TM4C123GH6PM_RISTERS

#include "std_types.h"

/*****************************************************************************
GPIO Risters (PORTA)
*****************************************************************************/
#define GPIO_PORTA_DATA_R       (*((volatile uint32 *)0x400043FC))
#define GPIO_PORTA_DIR_R        (*((volatile uint32 *)0x40004400))
#define GPIO_PORTA_AFSEL_R      (*((volatile uint32 *)0x40004420))
#define GPIO_PORTA_PUR_R        (*((volatile uint32 *)0x40004510))
#define GPIO_PORTA_PDR_R        (*((volatile uint32 *)0x40004514))
#define GPIO_PORTA_DEN_R        (*((volatile uint32 *)0x4000451C))
#define GPIO_PORTA_LOCK_R       (*((volatile uint32 *)0x40004520))
#define GPIO_PORTA_CR_R         (*((volatile uint32 *)0x40004524))
#define GPIO_PORTA_AMSEL_R      (*((volatile uint32 *)0x40004528))
#define GPIO_PORTA_PCTL_R       (*((volatile uint32 *)0x4000452C))

/* PORTA External Interrupts Risters */
#define GPIO_PORTA_IS_R         (*((volatile uint32 *)0x40004404))
#define GPIO_PORTA_IBE_R        (*((volatile uint32 *)0x40004408))
#define GPIO_PORTA_IEV_R        (*((volatile uint32 *)0x4000440C))
#define GPIO_PORTA_IM_R         (*((volatile uint32 *)0x40004410))
#define GPIO_PORTA_RIS_R        (*((volatile uint32 *)0x40004414))
#define GPIO_PORTA_ICR_R        (*((volatile uint32 *)0x4000441C))

/*****************************************************************************
GPIO Risters (PORTB)
*****************************************************************************/
#define GPIO_PORTB_DATA_R       (*((volatile uint32 *)0x400053FC))
#define GPIO_PORTB_DIR_R        (*((volatile uint32 *)0x40005400))
#define GPIO_PORTB_AFSEL_R      (*((volatile uint32 *)0x40005420))
#define GPIO_PORTB_PUR_R        (*((volatile uint32 *)0x40005510))
#define GPIO_PORTB_PDR_R        (*((volatile uint32 *)0x40005514))
#define GPIO_PORTB_DEN_R        (*((volatile uint32 *)0x4000551C))
#define GPIO_PORTB_LOCK_R       (*((volatile uint32 *)0x40005520))
#define GPIO_PORTB_CR_R         (*((volatile uint32 *)0x40005524))
#define GPIO_PORTB_AMSEL_R      (*((volatile uint32 *)0x40005528))
#define GPIO_PORTB_PCTL_R       (*((volatile uint32 *)0x4000552C))

/* PORTB External Interrupts Risters */
#define GPIO_PORTB_IS_R         (*((volatile uint32 *)0x40005404))
#define GPIO_PORTB_IBE_R        (*((volatile uint32 *)0x40005408))
#define GPIO_PORTB_IEV_R        (*((volatile uint32 *)0x4000540C))
#define GPIO_PORTB_IM_R         (*((volatile uint32 *)0x40005410))
#define GPIO_PORTB_RIS_R        (*((volatile uint32 *)0x40005414))
#define GPIO_PORTB_ICR_R        (*((volatile uint32 *)0x4000541C))

/*****************************************************************************
GPIO Risters (PORTC)
*****************************************************************************/
#define GPIO_PORTC_DATA_R       (*((volatile uint32 *)0x400063FC))
#define GPIO_PORTC_DIR_R        (*((volatile uint32 *)0x40006400))
#define GPIO_PORTC_AFSEL_R      (*((volatile uint32 *)0x40006420))
#define GPIO_PORTC_PUR_R        (*((volatile uint32 *)0x40006510))
#define GPIO_PORTC_PDR_R        (*((volatile uint32 *)0x40006514))
#define GPIO_PORTC_DEN_R        (*((volatile uint32 *)0x4000651C))
#define GPIO_PORTC_LOCK_R       (*((volatile uint32 *)0x40006520))
#define GPIO_PORTC_CR_R         (*((volatile uint32 *)0x40006524))
#define GPIO_PORTC_AMSEL_R      (*((volatile uint32 *)0x40006528))
#define GPIO_PORTC_PCTL_R       (*((volatile uint32 *)0x4000652C))

/* PORTC External Interrupts Risters */
#define GPIO_PORTC_IS_R         (*((volatile uint32 *)0x40006404))
#define GPIO_PORTC_IBE_R        (*((volatile uint32 *)0x40006408))
#define GPIO_PORTC_IEV_R        (*((volatile uint32 *)0x4000640C))
#define GPIO_PORTC_IM_R         (*((volatile uint32 *)0x40006410))
#define GPIO_PORTC_RIS_R        (*((volatile uint32 *)0x40006414))
#define GPIO_PORTC_ICR_R        (*((volatile uint32 *)0x4000641C))

/*****************************************************************************
GPIO Risters (PORTD)
*****************************************************************************/
#define GPIO_PORTD_DATA_R       (*((volatile uint32 *)0x400073FC))
#define GPIO_PORTD_DIR_R        (*((volatile uint32 *)0x40007400))
#define GPIO_PORTD_AFSEL_R      (*((volatile uint32 *)0x40007420))
#define GPIO_PORTD_PUR_R        (*((volatile uint32 *)0x40007510))
#define GPIO_PORTD_PDR_R        (*((volatile uint32 *)0x40007514))
#define GPIO_PORTD_DEN_R        (*((volatile uint32 *)0x4000751C))
#define GPIO_PORTD_LOCK_R       (*((volatile uint32 *)0x40007520))
#define GPIO_PORTD_CR_R         (*((volatile uint32 *)0x40007524))
#define GPIO_PORTD_AMSEL_R      (*((volatile uint32 *)0x40007528))
#define GPIO_PORTD_PCTL_R       (*((volatile uint32 *)0x4000752C))

/* PORTD External Interrupts Risters */
#define GPIO_PORTD_IS_R         (*((volatile uint32 *)0x40007404))
#define GPIO_PORTD_IBE_R        (*((volatile uint32 *)0x40007408))
#define GPIO_PORTD_IEV_R        (*((volatile uint32 *)0x4000740C))
#define GPIO_PORTD_IM_R         (*((volatile uint32 *)0x40007410))
#define GPIO_PORTD_RIS_R        (*((volatile uint32 *)0x40007414))
#define GPIO_PORTD_ICR_R        (*((volatile uint32 *)0x4000741C))

/*****************************************************************************
GPIO Risters (PORTE)
*****************************************************************************/
#define GPIO_PORTE_DATA_R       (*((volatile uint32 *)0x400243FC))
#define GPIO_PORTE_DIR_R        (*((volatile uint32 *)0x40024400))
#define GPIO_PORTE_AFSEL_R      (*((volatile uint32 *)0x40024420))
#define GPIO_PORTE_PUR_R        (*((volatile uint32 *)0x40024510))
#define GPIO_PORTE_PDR_R        (*((volatile uint32 *)0x40024514))
#define GPIO_PORTE_DEN_R        (*((volatile uint32 *)0x4002451C))
#define GPIO_PORTE_LOCK_R       (*((volatile uint32 *)0x40024520))
#define GPIO_PORTE_CR_R         (*((volatile uint32 *)0x40024524))
#define GPIO_PORTE_AMSEL_R      (*((volatile uint32 *)0x40024528))
#define GPIO_PORTE_PCTL_R       (*((volatile uint32 *)0x4002452C))

/* PORTE External Interrupts Risters */
#define GPIO_PORTE_IS_R         (*((volatile uint32 *)0x40024404))
#define GPIO_PORTE_IBE_R        (*((volatile uint32 *)0x40024408))
#define GPIO_PORTE_IEV_R        (*((volatile uint32 *)0x4002440C))
#define GPIO_PORTE_IM_R         (*((volatile uint32 *)0x40024410))
#define GPIO_PORTE_RIS_R        (*((volatile uint32 *)0x40024414))
#define GPIO_PORTE_ICR_R        (*((volatile uint32 *)0x4002441C))

/*****************************************************************************
GPIO Risters (PORTF)
*****************************************************************************/
#define GPIO_PORTF_DATA_R       (*((volatile uint32 *)0x400253FC))
#define GPIO_PORTF_DIR_R        (*((volatile uint32 *)0x40025400))
#define GPIO_PORTF_AFSEL_R      (*((volatile uint32 *)0x40025420))
#define GPIO_PORTF_PUR_R        (*((volatile uint32 *)0x40025510))
#define GPIO_PORTF_PDR_R        (*((volatile uint32 *)0x40025514))
#define GPIO_PORTF_DEN_R        (*((volatile uint32 *)0x4002551C))
#define GPIO_PORTF_LOCK_R       (*((volatile uint32 *)0x40025520))
#define GPIO_PORTF_CR_R         (*((volatile uint32 *)0x40025524))
#define GPIO_PORTF_AMSEL_R      (*((volatile uint32 *)0x40025528))
#define GPIO_PORTF_PCTL_R       (*((volatile uint32 *)0x4002552C))

/* PORTF External Interrupts Risters */
#define GPIO_PORTF_IS_R         (*((volatile uint32 *)0x40025404))
#define GPIO_PORTF_IBE_R        (*((volatile uint32 *)0x40025408))
#define GPIO_PORTF_IEV_R        (*((volatile uint32 *)0x4002540C))
#define GPIO_PORTF_IM_R         (*((volatile uint32 *)0x40025410))
#define GPIO_PORTF_RIS_R        (*((volatile uint32 *)0x40025414))
#define GPIO_PORTF_ICR_R        (*((volatile uint32 *)0x4002541C))

/*****************************************************************************
Systick Timer Risters
*****************************************************************************/
#define SYSTICK_CTRL_R          (*((volatile uint32 *)0xE000E010))
#define SYSTICK_RELOAD_R        (*((volatile uint32 *)0xE000E014))
#define SYSTICK_CURRENT_R       (*((volatile uint32 *)0xE000E018))

/*****************************************************************************
NVIC Risters
*****************************************************************************/
#define NVIC_PRI0_R             (*((volatile uint32 *)0xE000E400))
#define NVIC_PRI1_R             (*((volatile uint32 *)0xE000E404))
#define NVIC_PRI2_R             (*((volatile uint32 *)0xE000E408))
#define NVIC_PRI3_R             (*((volatile uint32 *)0xE000E40C))
#define NVIC_PRI4_R             (*((volatile uint32 *)0xE000E410))
#define NVIC_PRI5_R             (*((volatile uint32 *)0xE000E414))
#define NVIC_PRI6_R             (*((volatile uint32 *)0xE000E418))
#define NVIC_PRI7_R             (*((volatile uint32 *)0xE000E41C))
#define NVIC_PRI8_R             (*((volatile uint32 *)0xE000E420))
#define NVIC_PRI9_R             (*((volatile uint32 *)0xE000E424))
#define NVIC_PRI10_R            (*((volatile uint32 *)0xE000E428))
#define NVIC_PRI11_R            (*((volatile uint32 *)0xE000E42C))
#define NVIC_PRI12_R            (*((volatile uint32 *)0xE000E430))
#define NVIC_PRI13_R            (*((volatile uint32 *)0xE000E434))
#define NVIC_PRI14_R            (*((volatile uint32 *)0xE000E438))
#define NVIC_PRI15_R            (*((volatile uint32 *)0xE000E43C))
#define NVIC_PRI16_R            (*((volatile uint32 *)0xE000E440))
#define NVIC_PRI17_R            (*((volatile uint32 *)0xE000E444))
#define NVIC_PRI18_R            (*((volatile uint32 *)0xE000E448))
#define NVIC_PRI19_R            (*((volatile uint32 *)0xE000E44C))
#define NVIC_PRI20_R            (*((volatile uint32 *)0xE000E450))
#define NVIC_PRI21_R            (*((volatile uint32 *)0xE000E454))
#define NVIC_PRI22_R            (*((volatile uint32 *)0xE000E458))
#define NVIC_PRI23_R            (*((volatile uint32 *)0xE000E45C))
#define NVIC_PRI24_R            (*((volatile uint32 *)0xE000E460))
#define NVIC_PRI25_R            (*((volatile uint32 *)0xE000E464))
#define NVIC_PRI26_R            (*((volatile uint32 *)0xE000E468))
#define NVIC_PRI27_R            (*((volatile uint32 *)0xE000E46C))
#define NVIC_PRI28_R            (*((volatile uint32 *)0xE000E470))
#define NVIC_PRI29_R            (*((volatile uint32 *)0xE000E474))
#define NVIC_PRI30_R            (*((volatile uint32 *)0xE000E478))
#define NVIC_PRI31_R            (*((volatile uint32 *)0xE000E47C))
#define NVIC_PRI32_R            (*((volatile uint32 *)0xE000E480))
#define NVIC_PRI33_R            (*((volatile uint32 *)0xE000E484))
#define NVIC_PRI34_R            (*((volatile uint32 *)0xE000E488))

#define NVIC_EN0_R              (*((volatile uint32 *)0xE000E100))
#define NVIC_EN1_R              (*((volatile uint32 *)0xE000E104))
#define NVIC_EN2_R              (*((volatile uint32 *)0xE000E108))
#define NVIC_EN3_R              (*((volatile uint32 *)0xE000E10C))
#define NVIC_EN4_R              (*((volatile uint32 *)0xE000E110))
#define NVIC_DIS0_R             (*((volatile uint32 *)0xE000E180))
#define NVIC_DIS1_R             (*((volatile uint32 *)0xE000E184))
#define NVIC_DIS2_R             (*((volatile uint32 *)0xE000E188))
#define NVIC_DIS3_R             (*((volatile uint32 *)0xE000E18C))
#define NVIC_DIS4_R             (*((volatile uint32 *)0xE000E190))

/*****************************************************************************
System Control Block Risters
*****************************************************************************/
#define NVIC_SYSTEM_PRI1_R      (*((volatile uint32 *)0xE000ED18))
#define NVIC_SYSTEM_PRI2_R      (*((volatile uint32 *)0xE000ED1C))
#define NVIC_SYSTEM_PRI3_R      (*((volatile uint32 *)0xE000ED20))
#define NVIC_SYSTEM_SYSHNDCTRL    (*((volatile uint32 *)0xE000ED24))
#define NVIC_SYSTEM_INTCTRL       (*((volatile uint32 *)0xE000ED04))
#define NVIC_SYSTEM_CFGCTRL       (*((volatile uint32 *)0xE000ED14))

/*****************************************************************************
MPU Risters
*****************************************************************************/
#define MPU_TYPE_R              (*((volatile uint32 *)0xE000ED90))
#define MPU_CTRL_R              (*((volatile uint32 *)0xE000ED94))
#define MPU_NUMBER_R            (*((volatile uint32 *)0xE000ED98))
#define MPU_BASE_R              (*((volatile uint32 *)0xE000ED9C))
#define MPU_ATTR_R              (*((volatile uint32 *)0xE000EDA0))
#define MPU_BASE1_R             (*((volatile uint32 *)0xE000EDA4))
#define MPU_ATTR1_R             (*((volatile uint32 *)0xE000EDA8))
#define MPU_BASE2_R             (*((volatile uint32 *)0xE000EDAC))
#define MPU_ATTR2_R             (*((volatile uint32 *)0xE000EDB0))
#define MPU_BASE3_R             (*((volatile uint32 *)0xE000EDB4))
#define MPU_ATTR3_R             (*((volatile uint32 *)0xE000EDB8))

/*****************************************************************************
System Control Risters
*****************************************************************************/
#define SYSCTL_DID0_R           (*((volatile uint32 *)0x400FE000))
#define SYSCTL_DID1_R           (*((volatile uint32 *)0x400FE004))
#define SYSCTL_DC0_R            (*((volatile uint32 *)0x400FE008))
#define SYSCTL_DC1_R            (*((volatile uint32 *)0x400FE010))
#define SYSCTL_DC2_R            (*((volatile uint32 *)0x400FE014))
#define SYSCTL_DC3_R            (*((volatile uint32 *)0x400FE018))
#define SYSCTL_DC4_R            (*((volatile uint32 *)0x400FE01C))
#define SYSCTL_DC5_R            (*((volatile uint32 *)0x400FE020))
#define SYSCTL_DC6_R            (*((volatile uint32 *)0x400FE024))
#define SYSCTL_DC7_R            (*((volatile uint32 *)0x400FE028))
#define SYSCTL_DC8_R            (*((volatile uint32 *)0x400FE02C))
#define SYSCTL_PBORCTL_R        (*((volatile uint32 *)0x400FE030))
#define SYSCTL_SRCR0_R          (*((volatile uint32 *)0x400FE040))
#define SYSCTL_SRCR1_R          (*((volatile uint32 *)0x400FE044))
#define SYSCTL_SRCR2_R          (*((volatile uint32 *)0x400FE048))
#define SYSCTL_RIS_R            (*((volatile uint32 *)0x400FE050))
#define SYSCTL_IMC_R            (*((volatile uint32 *)0x400FE054))
#define SYSCTL_MISC_R           (*((volatile uint32 *)0x400FE058))
#define SYSCTL_RESC_R           (*((volatile uint32 *)0x400FE05C))
#define SYSCTL_RCC_R            (*((volatile uint32 *)0x400FE060))
#define SYSCTL_GPIOHBCTL_R      (*((volatile uint32 *)0x400FE06C))
#define SYSCTL_RCC2_R           (*((volatile uint32 *)0x400FE070))
#define SYSCTL_MOSCCTL_R        (*((volatile uint32 *)0x400FE07C))
#define SYSCTL_RCGC0_R          (*((volatile uint32 *)0x400FE100))
#define SYSCTL_RCGC1_R          (*((volatile uint32 *)0x400FE104))
#define SYSCTL_RCGC2_R          (*((volatile uint32 *)0x400FE108))
#define SYSCTL_SCGC0_R          (*((volatile uint32 *)0x400FE110))
#define SYSCTL_SCGC1_R          (*((volatile uint32 *)0x400FE114))
#define SYSCTL_SCGC2_R          (*((volatile uint32 *)0x400FE118))
#define SYSCTL_DCGC0_R          (*((volatile uint32 *)0x400FE120))
#define SYSCTL_DCGC1_R          (*((volatile uint32 *)0x400FE124))
#define SYSCTL_DCGC2_R          (*((volatile uint32 *)0x400FE128))
#define SYSCTL_DSLPCLKCFG_R     (*((volatile uint32 *)0x400FE144))
#define SYSCTL_SYSPROP_R        (*((volatile uint32 *)0x400FE14C))
#define SYSCTL_PIOSCCAL_R       (*((volatile uint32 *)0x400FE150))
#define SYSCTL_PIOSCSTAT_R      (*((volatile uint32 *)0x400FE154))
#define SYSCTL_PLLFREQ0_R       (*((volatile uint32 *)0x400FE160))
#define SYSCTL_PLLFREQ1_R       (*((volatile uint32 *)0x400FE164))
#define SYSCTL_PLLSTAT_R        (*((volatile uint32 *)0x400FE168))
#define SYSCTL_DC9_R            (*((volatile uint32 *)0x400FE190))
#define SYSCTL_NVMSTAT_R        (*((volatile uint32 *)0x400FE1A0))
#define SYSCTL_PPWD_R           (*((volatile uint32 *)0x400FE300))
#define SYSCTL_PPTIMER_R        (*((volatile uint32 *)0x400FE304))
#define SYSCTL_PPGPIO_R         (*((volatile uint32 *)0x400FE308))
#define SYSCTL_PPDMA_R          (*((volatile uint32 *)0x400FE30C))
#define SYSCTL_PPHIB_R          (*((volatile uint32 *)0x400FE314))
#define SYSCTL_PPUART_R         (*((volatile uint32 *)0x400FE318))
#define SYSCTL_PPSSI_R          (*((volatile uint32 *)0x400FE31C))
#define SYSCTL_PPI2C_R          (*((volatile uint32 *)0x400FE320))
#define SYSCTL_PPUSB_R          (*((volatile uint32 *)0x400FE328))
#define SYSCTL_PPCAN_R          (*((volatile uint32 *)0x400FE334))
#define SYSCTL_PPADC_R          (*((volatile uint32 *)0x400FE338))
#define SYSCTL_PPACMP_R         (*((volatile uint32 *)0x400FE33C))
#define SYSCTL_PPPWM_R          (*((volatile uint32 *)0x400FE340))
#define SYSCTL_PPQEI_R          (*((volatile uint32 *)0x400FE344))
#define SYSCTL_PPEEPROM_R       (*((volatile uint32 *)0x400FE358))
#define SYSCTL_PPWTIMER_R       (*((volatile uint32 *)0x400FE35C))
#define SYSCTL_SRWD_R           (*((volatile uint32 *)0x400FE500))
#define SYSCTL_SRTIMER_R        (*((volatile uint32 *)0x400FE504))
#define SYSCTL_SRGPIO_R         (*((volatile uint32 *)0x400FE508))
#define SYSCTL_SRDMA_R          (*((volatile uint32 *)0x400FE50C))
#define SYSCTL_SRHIB_R          (*((volatile uint32 *)0x400FE514))
#define SYSCTL_SRUART_R         (*((volatile uint32 *)0x400FE518))
#define SYSCTL_SRSSI_R          (*((volatile uint32 *)0x400FE51C))
#define SYSCTL_SRI2C_R          (*((volatile uint32 *)0x400FE520))
#define SYSCTL_SRUSB_R          (*((volatile uint32 *)0x400FE528))
#define SYSCTL_SRCAN_R          (*((volatile uint32 *)0x400FE534))
#define SYSCTL_SRADC_R          (*((volatile uint32 *)0x400FE538))
#define SYSCTL_SRACMP_R         (*((volatile uint32 *)0x400FE53C))
#define SYSCTL_SRPWM_R          (*((volatile uint32 *)0x400FE540))
#define SYSCTL_SRQEI_R          (*((volatile uint32 *)0x400FE544))
#define SYSCTL_SREEPROM_R       (*((volatile uint32 *)0x400FE558))
#define SYSCTL_SRWTIMER_R       (*((volatile uint32 *)0x400FE55C))
#define SYSCTL_RCGCWD_R         (*((volatile uint32 *)0x400FE600))
#define SYSCTL_RCGCTIMER_R      (*((volatile uint32 *)0x400FE604))
#define SYSCTL_RCGCGPIO_R       (*((volatile uint32 *)0x400FE608))
#define SYSCTL_RCGCDMA_R        (*((volatile uint32 *)0x400FE60C))
#define SYSCTL_RCGCHIB_R        (*((volatile uint32 *)0x400FE614))
#define SYSCTL_RCGCUART_R       (*((volatile uint32 *)0x400FE618))
#define SYSCTL_RCGCSSI_R        (*((volatile uint32 *)0x400FE61C))
#define SYSCTL_RCGCI2C_R        (*((volatile uint32 *)0x400FE620))
#define SYSCTL_RCGCUSB_R        (*((volatile uint32 *)0x400FE628))
#define SYSCTL_RCGCCAN_R        (*((volatile uint32 *)0x400FE634))
#define SYSCTL_RCGCADC_R        (*((volatile uint32 *)0x400FE638))
#define SYSCTL_RCGCACMP_R       (*((volatile uint32 *)0x400FE63C))
#define SYSCTL_RCGCPWM_R        (*((volatile uint32 *)0x400FE640))
#define SYSCTL_RCGCQEI_R        (*((volatile uint32 *)0x400FE644))
#define SYSCTL_RCGCEEPROM_R     (*((volatile uint32 *)0x400FE658))
#define SYSCTL_RCGCWTIMER_R     (*((volatile uint32 *)0x400FE65C))
#define SYSCTL_SCGCWD_R         (*((volatile uint32 *)0x400FE700))
#define SYSCTL_SCGCTIMER_R      (*((volatile uint32 *)0x400FE704))
#define SYSCTL_SCGCGPIO_R       (*((volatile uint32 *)0x400FE708))
#define SYSCTL_SCGCDMA_R        (*((volatile uint32 *)0x400FE70C))
#define SYSCTL_SCGCHIB_R        (*((volatile uint32 *)0x400FE714))
#define SYSCTL_SCGCUART_R       (*((volatile uint32 *)0x400FE718))
#define SYSCTL_SCGCSSI_R        (*((volatile uint32 *)0x400FE71C))
#define SYSCTL_SCGCI2C_R        (*((volatile uint32 *)0x400FE720))
#define SYSCTL_SCGCUSB_R        (*((volatile uint32 *)0x400FE728))
#define SYSCTL_SCGCCAN_R        (*((volatile uint32 *)0x400FE734))
#define SYSCTL_SCGCADC_R        (*((volatile uint32 *)0x400FE738))
#define SYSCTL_SCGCACMP_R       (*((volatile uint32 *)0x400FE73C))
#define SYSCTL_SCGCPWM_R        (*((volatile uint32 *)0x400FE740))
#define SYSCTL_SCGCQEI_R        (*((volatile uint32 *)0x400FE744))
#define SYSCTL_SCGCEEPROM_R     (*((volatile uint32 *)0x400FE758))
#define SYSCTL_SCGCWTIMER_R     (*((volatile uint32 *)0x400FE75C))
#define SYSCTL_DCGCWD_R         (*((volatile uint32 *)0x400FE800))
#define SYSCTL_DCGCTIMER_R      (*((volatile uint32 *)0x400FE804))
#define SYSCTL_DCGCGPIO_R       (*((volatile uint32 *)0x400FE808))
#define SYSCTL_DCGCDMA_R        (*((volatile uint32 *)0x400FE80C))
#define SYSCTL_DCGCHIB_R        (*((volatile uint32 *)0x400FE814))
#define SYSCTL_DCGCUART_R       (*((volatile uint32 *)0x400FE818))
#define SYSCTL_DCGCSSI_R        (*((volatile uint32 *)0x400FE81C))
#define SYSCTL_DCGCI2C_R        (*((volatile uint32 *)0x400FE820))
#define SYSCTL_DCGCUSB_R        (*((volatile uint32 *)0x400FE828))
#define SYSCTL_DCGCCAN_R        (*((volatile uint32 *)0x400FE834))
#define SYSCTL_DCGCADC_R        (*((volatile uint32 *)0x400FE838))
#define SYSCTL_DCGCACMP_R       (*((volatile uint32 *)0x400FE83C))
#define SYSCTL_DCGCPWM_R        (*((volatile uint32 *)0x400FE840))
#define SYSCTL_DCGCQEI_R        (*((volatile uint32 *)0x400FE844))
#define SYSCTL_DCGCEEPROM_R     (*((volatile uint32 *)0x400FE858))
#define SYSCTL_DCGCWTIMER_R     (*((volatile uint32 *)0x400FE85C))
#define SYSCTL_PRWD_R           (*((volatile uint32 *)0x400FEA00))
#define SYSCTL_PRTIMER_R        (*((volatile uint32 *)0x400FEA04))
#define SYSCTL_PRGPIO_R         (*((volatile uint32 *)0x400FEA08))
#define SYSCTL_PRDMA_R          (*((volatile uint32 *)0x400FEA0C))
#define SYSCTL_PRHIB_R          (*((volatile uint32 *)0x400FEA14))
#define SYSCTL_PRUART_R         (*((volatile uint32 *)0x400FEA18))
#define SYSCTL_PRSSI_R          (*((volatile uint32 *)0x400FEA1C))
#define SYSCTL_PRI2C_R          (*((volatile uint32 *)0x400FEA20))
#define SYSCTL_PRUSB_R          (*((volatile uint32 *)0x400FEA28))
#define SYSCTL_PRCAN_R          (*((volatile uint32 *)0x400FEA34))
#define SYSCTL_PRADC_R          (*((volatile uint32 *)0x400FEA38))
#define SYSCTL_PRACMP_R         (*((volatile uint32 *)0x400FEA3C))
#define SYSCTL_PRPWM_R          (*((volatile uint32 *)0x400FEA40))
#define SYSCTL_PRQEI_R          (*((volatile uint32 *)0x400FEA44))
#define SYSCTL_PREEPROM_R       (*((volatile uint32 *)0x400FEA58))
#define SYSCTL_PRWTIMER_R       (*((volatile uint32 *)0x400FEA5C))

/*****************************************************************************
UART0 Risters
*****************************************************************************/
#define UART0_DR_R              (*((volatile uint32 *)0x4000C000))
#define UART0_RSR_R             (*((volatile uint32 *)0x4000C004))
#define UART0_ECR_R             (*((volatile uint32 *)0x4000C004))
#define UART0_FR_R              (*((volatile uint32 *)0x4000C018))
#define UART0_ILPR_R            (*((volatile uint32 *)0x4000C020))
#define UART0_IBRD_R            (*((volatile uint32 *)0x4000C024))
#define UART0_FBRD_R            (*((volatile uint32 *)0x4000C028))
#define UART0_LCRH_R            (*((volatile uint32 *)0x4000C02C))
#define UART0_CTL_R             (*((volatile uint32 *)0x4000C030))
#define UART0_IFLS_R            (*((volatile uint32 *)0x4000C034))
#define UART0_IM_R              (*((volatile uint32 *)0x4000C038))
#define UART0_RIS_R             (*((volatile uint32 *)0x4000C03C))
#define UART0_MIS_R             (*((volatile uint32 *)0x4000C040))
#define UART0_ICR_R             (*((volatile uint32 *)0x4000C044))
#define UART0_DMACTL_R          (*((volatile uint32 *)0x4000C048))
#define UART0_9BITADDR_R        (*((volatile uint32 *)0x4000C0A4))
#define UART0_9BITAMASK_R       (*((volatile uint32 *)0x4000C0A8))
#define UART0_PP_R              (*((volatile uint32 *)0x4000CFC0))
#define UART0_CC_R              (*((volatile uint32 *)0x4000CFC8))

/*****************************************************************************
Micro Direct Memory Access Risters (UDMA)
*****************************************************************************/
#define UDMA_STAT_R             (*((volatile uint32 *)0x400FF000))
#define UDMA_CFG_R              (*((volatile uint32 *)0x400FF004))
#define UDMA_CTLBASE_R          (*((volatile uint32 *)0x400FF008))
#define UDMA_ALTBASE_R          (*((volatile uint32 *)0x400FF00C))
#define UDMA_WAITSTAT_R         (*((volatile uint32 *)0x400FF010))
#define UDMA_SWREQ_R            (*((volatile uint32 *)0x400FF014))
#define UDMA_USEBURSTSET_R      (*((volatile uint32 *)0x400FF018))
#define UDMA_USEBURSTCLR_R      (*((volatile uint32 *)0x400FF01C))
#define UDMA_REQMASKSET_R       (*((volatile uint32 *)0x400FF020))
#define UDMA_REQMASKCLR_R       (*((volatile uint32 *)0x400FF024))
#define UDMA_ENASET_R           (*((volatile uint32 *)0x400FF028))
#define UDMA_ENACLR_R           (*((volatile uint32 *)0x400FF02C))
#define UDMA_ALTSET_R           (*((volatile uint32 *)0x400FF030))
#define UDMA_ALTCLR_R           (*((volatile uint32 *)0x400FF034))
#define UDMA_PRIOSET_R          (*((volatile uint32 *)0x400FF038))
#define UDMA_PRIOCLR_R          (*((volatile uint32 *)0x400FF03C))
#define UDMA_ERRCLR_R           (*((volatile uint32 *)0x400FF04C))
#define UDMA_CHASGN_R           (*((volatile uint32 *)0x400FF500))
#define UDMA_CHIS_R             (*((volatile uint32 *)0x400FF504))
#define UDMA_CHMAP0_R           (*((volatile uint32 *)0x400FF510))
#define UDMA_CHMAP1_R           (*((volatile uint32 *)0x400FF514))
#define UDMA_CHMAP2_R           (*((volatile uint32 *)0x400FF518))
#define UDMA_CHMAP3_R           (*((volatile uint32 *)0x400FF51C))

/*****************************************************************************
Flash Risters
*****************************************************************************/
#define FLASH_FMA_R             (*((volatile uint32 *)0x400FD000))
#define FLASH_FMD_R             (*((volatile uint32 *)0x400FD004))
#define FLASH_FMC_R             (*((volatile uint32 *)0x400FD008))
#define FLASH_FCRIS_R           (*((volatile uint32 *)0x400FD00C))
#define FLASH_FCIM_R            (*((volatile uint32 *)0x400FD010))
#define FLASH_FCMISC_R          (*((volatile uint32 *)0x400FD014))
#define FLASH_FMC2_R            (*((volatile uint32 *)0x400FD020))
#define FLASH_FWBVAL_R          (*((volatile uint32 *)0x400FD030))
#define FLASH_FWBN_R            (*((volatile uint32 *)0x400FD100))
#define FLASH_FSIZE_R           (*((volatile uint32 *)0x400FDFC0))
#define FLASH_SSIZE_R           (*((volatile uint32 *)0x400FDFC4))
#define FLASH_ROMSWMAP_R        (*((volatile uint32 *)0x400FDFCC))
#define FLASH_RMCTL_R           (*((volatile uint32 *)0x400FE0F0))
#define FLASH_BOOTCFG_R         (*((volatile uint32 *)0x400FE1D0))
#define FLASH_USERR0_R        (*((volatile uint32 *)0x400FE1E0))
#define FLASH_USERR1_R        (*((volatile uint32 *)0x400FE1E4))
#define FLASH_USERR2_R        (*((volatile uint32 *)0x400FE1E8))
#define FLASH_USERR3_R        (*((volatile uint32 *)0x400FE1EC))
#define FLASH_FMPRE0_R          (*((volatile uint32 *)0x400FE200))
#define FLASH_FMPRE1_R          (*((volatile uint32 *)0x400FE204))
#define FLASH_FMPRE2_R          (*((volatile uint32 *)0x400FE208))
#define FLASH_FMPRE3_R          (*((volatile uint32 *)0x400FE20C))
#define FLASH_FMPPE0_R          (*((volatile uint32 *)0x400FE400))
#define FLASH_FMPPE1_R          (*((volatile uint32 *)0x400FE404))
#define FLASH_FMPPE2_R          (*((volatile uint32 *)0x400FE408))
#define FLASH_FMPPE3_R          (*((volatile uint32 *)0x400FE40C))

/*****************************************************************************
SPI1 Risters
*****************************************************************************/
#define SYSCTL_RCGCSSI_R          (*((volatile uint32 *)0x400FE61C))
#define SPI1_SSICR0_R             (*((volatile uint32 *)0x40009000))
#define SPI1_SSICR1_R             (*((volatile uint32 *)0x40009004))
#define SPI1_SSIDR_R              (*((volatile uint32 *)0x40009008))
#define SPI1_SSISR_R              (*((volatile uint32 *)0x4000900C))
#define SPI1_SSICPSR_R            (*((volatile uint32 *)0x40009010))
#define SPI1_SSIIM_R              (*((volatile uint32 *)0x40009014))
#define SPI1_SSIRIS_R             (*((volatile uint32 *)0x40009018))
#define SPI1_SSIMIS_R             (*((volatile uint32 *)0x4000901C))
#define SPI1_SSIICR_R             (*((volatile uint32 *)0x40009020))
#define SPI1_SSIDMACTL_R          (*((volatile uint32 *)0x40009024))
#define SPI1_SSICC_R              (*((volatile uint32 *)0x40009FC8))

/*****************************************************************************
UART5 Risters
*****************************************************************************/
#define UART5_DR_R              (*((volatile uint32 *)0x40011000))
#define UART5_RSR_R             (*((volatile uint32 *)0x40011004))
#define UART5_ECR_R             (*((volatile uint32 *)0x40011004))
#define UART5_FR_R              (*((volatile uint32 *)0x40011018))
#define UART5_ILPR_R            (*((volatile uint32 *)0x40011020))
#define UART5_IBRD_R            (*((volatile uint32 *)0x40011024))
#define UART5_FBRD_R            (*((volatile uint32 *)0x40011028))
#define UART5_LCRH_R            (*((volatile uint32 *)0x4001102C))
#define UART5_CTL_R             (*((volatile uint32 *)0x40011030))
#define UART5_IFLS_R            (*((volatile uint32 *)0x40011034))
#define UART5_IM_R              (*((volatile uint32 *)0x40011038))
#define UART5_RIS_R             (*((volatile uint32 *)0x4001103C))
#define UART5_MIS_R             (*((volatile uint32 *)0x40011040))
#define UART5_ICR_R             (*((volatile uint32 *)0x40011044))
#define UART5_DMACTL_R          (*((volatile uint32 *)0x40011048))
#define UART5_9BITADDR_R        (*((volatile uint32 *)0x400110A4))
#define UART5_9BITAMASK_R       (*((volatile uint32 *)0x400110A8))
#define UART5_PP_R              (*((volatile uint32 *)0x40011FC0))
#define UART5_CC_R              (*((volatile uint32 *)0x40011FC8))


#define UART5_DATA_5BITS          0x0
#define UART5_DATA_6BITS          0x1
#define UART5_DATA_7BITS          0x2
#define UART5_DATA_8BITS          0x3
#define UART5_LCRH_WLEN_BITS_POS  5
#define UART5_CTL_UARTEN_MASK     0x00000001
#define UART5_CTL_TXE_MASK        0x00000100
#define UART5_CTL_RXE_MASK        0x00000200
#define UART5_FR_TXFE_MASK        0x00000080
#define UART5_FR_RXFE_MASK        0x00000010

//*****************************************************************************
//
// PWM registers (PWM1)
//
//*****************************************************************************
#define PWM1_CTL_R              (*((volatile uint32 *)0x40029000))
#define PWM1_SYNC_R             (*((volatile uint32 *)0x40029004))
#define PWM1_ENABLE_R           (*((volatile uint32 *)0x40029008))
#define PWM1_INVERT_R           (*((volatile uint32 *)0x4002900C))
#define PWM1_FAULT_R            (*((volatile uint32 *)0x40029010))
#define PWM1_INTEN_R            (*((volatile uint32 *)0x40029014))
#define PWM1_RIS_R              (*((volatile uint32 *)0x40029018))
#define PWM1_ISC_R              (*((volatile uint32 *)0x4002901C))
#define PWM1_STATUS_R           (*((volatile uint32 *)0x40029020))
#define PWM1_FAULTVAL_R         (*((volatile uint32 *)0x40029024))
#define PWM1_ENUPD_R            (*((volatile uint32 *)0x40029028))
#define PWM1_0_CTL_R            (*((volatile uint32 *)0x40029040))
#define PWM1_0_INTEN_R          (*((volatile uint32 *)0x40029044))
#define PWM1_0_RIS_R            (*((volatile uint32 *)0x40029048))
#define PWM1_0_ISC_R            (*((volatile uint32 *)0x4002904C))
#define PWM1_0_LOAD_R           (*((volatile uint32 *)0x40029050))
#define PWM1_0_COUNT_R          (*((volatile uint32 *)0x40029054))
#define PWM1_0_CMPA_R           (*((volatile uint32 *)0x40029058))
#define PWM1_0_CMPB_R           (*((volatile uint32 *)0x4002905C))
#define PWM1_0_GENA_R           (*((volatile uint32 *)0x40029060))
#define PWM1_0_GENB_R           (*((volatile uint32 *)0x40029064))
#define PWM1_0_DBCTL_R          (*((volatile uint32 *)0x40029068))
#define PWM1_0_DBRISE_R         (*((volatile uint32 *)0x4002906C))
#define PWM1_0_DBFALL_R         (*((volatile uint32 *)0x40029070))
#define PWM1_0_FLTSRC0_R        (*((volatile uint32 *)0x40029074))
#define PWM1_0_FLTSRC1_R        (*((volatile uint32 *)0x40029078))
#define PWM1_0_MINFLTPER_R      (*((volatile uint32 *)0x4002907C))
#define PWM1_1_CTL_R            (*((volatile uint32 *)0x40029080))
#define PWM1_1_INTEN_R          (*((volatile uint32 *)0x40029084))
#define PWM1_1_RIS_R            (*((volatile uint32 *)0x40029088))
#define PWM1_1_ISC_R            (*((volatile uint32 *)0x4002908C))
#define PWM1_1_LOAD_R           (*((volatile uint32 *)0x40029090))
#define PWM1_1_COUNT_R          (*((volatile uint32 *)0x40029094))
#define PWM1_1_CMPA_R           (*((volatile uint32 *)0x40029098))
#define PWM1_1_CMPB_R           (*((volatile uint32 *)0x4002909C))
#define PWM1_1_GENA_R           (*((volatile uint32 *)0x400290A0))
#define PWM1_1_GENB_R           (*((volatile uint32 *)0x400290A4))
#define PWM1_1_DBCTL_R          (*((volatile uint32 *)0x400290A8))
#define PWM1_1_DBRISE_R         (*((volatile uint32 *)0x400290AC))
#define PWM1_1_DBFALL_R         (*((volatile uint32 *)0x400290B0))
#define PWM1_1_FLTSRC0_R        (*((volatile uint32 *)0x400290B4))
#define PWM1_1_FLTSRC1_R        (*((volatile uint32 *)0x400290B8))
#define PWM1_1_MINFLTPER_R      (*((volatile uint32 *)0x400290BC))
#define PWM1_2_CTL_R            (*((volatile uint32 *)0x400290C0))
#define PWM1_2_INTEN_R          (*((volatile uint32 *)0x400290C4))
#define PWM1_2_RIS_R            (*((volatile uint32 *)0x400290C8))
#define PWM1_2_ISC_R            (*((volatile uint32 *)0x400290CC))
#define PWM1_2_LOAD_R           (*((volatile uint32 *)0x400290D0))
#define PWM1_2_COUNT_R          (*((volatile uint32 *)0x400290D4))
#define PWM1_2_CMPA_R           (*((volatile uint32 *)0x400290D8))
#define PWM1_2_CMPB_R           (*((volatile uint32 *)0x400290DC))
#define PWM1_2_GENA_R           (*((volatile uint32 *)0x400290E0))
#define PWM1_2_GENB_R           (*((volatile uint32 *)0x400290E4))
#define PWM1_2_DBCTL_R          (*((volatile uint32 *)0x400290E8))
#define PWM1_2_DBRISE_R         (*((volatile uint32 *)0x400290EC))
#define PWM1_2_DBFALL_R         (*((volatile uint32 *)0x400290F0))
#define PWM1_2_FLTSRC0_R        (*((volatile uint32 *)0x400290F4))
#define PWM1_2_FLTSRC1_R        (*((volatile uint32 *)0x400290F8))
#define PWM1_2_MINFLTPER_R      (*((volatile uint32 *)0x400290FC))
#define PWM1_3_CTL_R            (*((volatile uint32 *)0x40029100))
#define PWM1_3_INTEN_R          (*((volatile uint32 *)0x40029104))
#define PWM1_3_RIS_R            (*((volatile uint32 *)0x40029108))
#define PWM1_3_ISC_R            (*((volatile uint32 *)0x4002910C))
#define PWM1_3_LOAD_R           (*((volatile uint32 *)0x40029110))
#define PWM1_3_COUNT_R          (*((volatile uint32 *)0x40029114))
#define PWM1_3_CMPA_R           (*((volatile uint32 *)0x40029118))
#define PWM1_3_CMPB_R           (*((volatile uint32 *)0x4002911C))
#define PWM1_3_GENA_R           (*((volatile uint32 *)0x40029120))
#define PWM1_3_GENB_R           (*((volatile uint32 *)0x40029124))
#define PWM1_3_DBCTL_R          (*((volatile uint32 *)0x40029128))
#define PWM1_3_DBRISE_R         (*((volatile uint32 *)0x4002912C))
#define PWM1_3_DBFALL_R         (*((volatile uint32 *)0x40029130))
#define PWM1_3_FLTSRC0_R        (*((volatile uint32 *)0x40029134))
#define PWM1_3_FLTSRC1_R        (*((volatile uint32 *)0x40029138))
#define PWM1_3_MINFLTPER_R      (*((volatile uint32 *)0x4002913C))
#define PWM1_0_FLTSEN_R         (*((volatile uint32 *)0x40029800))
#define PWM1_0_FLTSTAT0_R       (*((volatile uint32 *)0x40029804))
#define PWM1_0_FLTSTAT1_R       (*((volatile uint32 *)0x40029808))
#define PWM1_1_FLTSEN_R         (*((volatile uint32 *)0x40029880))
#define PWM1_1_FLTSTAT0_R       (*((volatile uint32 *)0x40029884))
#define PWM1_1_FLTSTAT1_R       (*((volatile uint32 *)0x40029888))
#define PWM1_2_FLTSTAT0_R       (*((volatile uint32 *)0x40029904))
#define PWM1_2_FLTSTAT1_R       (*((volatile uint32 *)0x40029908))
#define PWM1_3_FLTSTAT0_R       (*((volatile uint32 *)0x40029984))
#define PWM1_3_FLTSTAT1_R       (*((volatile uint32 *)0x40029988))
#define PWM1_PP_R               (*((volatile uint32 *)0x40029FC0))

#endif
